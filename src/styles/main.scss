@import 'variables';
@import 'mixins';
@import 'functions';

:root {
	--input-range-thumb-width: #{thumb(width)};
}

// slider
[multi-range-slider] {
	* {
		margin: 0;
		padding: 0;
	}

	@include flexCenter;
	position: relative;
	height: rangeHeight();
	@include objectProperties($slider);

	// change slider margin based on labels/tooltip usage
	&[min-label] {
		margin-left: slider(margin) + sliderLabelWidth($includeOffset: true);
	}

	&[max-label] {
		margin-right: slider(margin) + sliderLabelWidth($includeOffset: true);
	}

	&[size-tooltip] {
		margin-top: slider(margin) + tooltipHeight($includeOffset: true);
	}

	&[start-end-tooltip] {
		margin-left: slider(margin) + tooltipWidth();
		margin-right: slider(margin) + tooltipWidth();
		margin-bottom: slider(margin) + tooltipHeight($includeOffset: true);

		&[min-label] {
			margin-left: slider(margin) + max(tooltipWidth(), sliderLabelWidth($includeOffset: true));
		}

		&[max-label] {
			margin-right: slider(margin) + max(tooltipWidth(), sliderLabelWidth($includeOffset: true));
		}
	}

	// slider labels
	&[min-label]::before {
		@include sliderLabel(min-label);
	}

	&[max-label]::after {
		@include sliderLabel(max-label);
	}

	// track
	[track-container] {
		@include flexCenter;
		position: absolute;
		z-index: -2;
		width: calc(100% - #{thumb(width)});
		height: rangeHeight();

		[track] {
			width: 100%;
			@include objectProperties($track);
		}
	}

	// input
	input[type=range] {
		position: absolute;
		z-index: 1;
		width: 100%;
		background: none;
		pointer-events: none;

		&:focus {
			outline: none;
		}

		&:hover {
			+ input[type=range] + [range-container], + [range-container] {
				[tooltip][tooltip-on-hover] {
					opacity: 1;
				}
			}
		}

		// ms browsers
		// NOT WORKING! ::-ms-thumb doesn't support pointer-events
		&::-ms-track {
			background: none;
			color: transparent;
			border: none;
		}

		&::-ms-thumb {
			@include objectProperties($thumb);
			pointer-events: auto;
		}

		&[fixed]::-ms-thumb {
			@include thumbFixed();
		}

		&::-ms-fill-upper, &::-ms-fill-lower {
			background: none;
		}

		// moz browser
		&::-moz-range-track {
			-moz-appearance: none;
		}

		&::-moz-range-thumb {
			@include objectProperties($thumb);
			pointer-events: auto;
		}

		&[fixed]::-moz-range-thumb {
			@include thumbFixed();
		}

		&::-moz-focus-outer {
			border: none;
		}

		// webkit browsers
		&::-webkit-slider-runnable-track, &::-webkit-slider-thumb, & {
			-webkit-appearance: none;
		}

		&::-webkit-slider-thumb {
			@include objectProperties($thumb);
			pointer-events: auto;
		}

		&[fixed]::-webkit-slider-thumb {
			@include thumbFixed();
		}

		&[connected] {
			&[start]::-webkit-slider-thumb {
				@include cutThumbHalf($direction: left);
			}

			&[end]::-webkit-slider-thumb {
				@include cutThumbHalf($direction: right);
			}
		}

		&[size="0"] {
			&[start]::-webkit-slider-thumb {
				@include cutThumbHalf($direction: right);
			}

			&[end]::-webkit-slider-thumb {
				@include cutThumbHalf($direction: left);
			}

			&[connected]::-webkit-slider-thumb {
				visibility: hidden;
			}
		}
	}

	// range
	[range-container] {
		@include flexCenter;
		position: absolute;
		z-index: 0;
		height: rangeHeight();
		background-color: range(color);
		border-color: range(color);
		color: range(text-color);
		visibility: hidden;

		&:nth-child(4) [range] {
			border-top-left-radius: track(border-radius);
			border-bottom-left-radius: track(border-radius);
		}

		&:last-child [range] {
			border-top-right-radius: track(border-radius);
			border-bottom-right-radius: track(border-radius);
		}

		[range] {
			position: absolute;
			width: 100%;
			height: range(thickness);
			background-color: inherit;
			color: inherit;
			visibility: visible;
		}

		[tooltip] {
			&[tooltip-always] {
				&[size] {
					@include tooltip(size, 1, center, start);
				}

				&[start] {
					@include tooltip(start, 1, start, end);
				}

				&[end] {
					@include tooltip(end, 1, end, end);
				}
			}

			&[tooltip-on-hover] {
				&[size] {
					@include tooltip(size, 0, center, start);
				}

				&[start] {
					@include tooltip(start, 0, start, end);
				}

				&[end] {
					@include tooltip(end, 0, end, end);
				}
			}

			&[size="0"] ~ * {
				&[start] {
					&[tooltip-always] {
						@include tooltip(start, 1, center, end);
					}

					&[tooltip-on-hover] {
						@include tooltip(start, 0, center, end);
					}
				}

				&[end] {
					display: none;
				}
			}
		}

		&:hover {
			[tooltip][tooltip-on-hover] {
				opacity: 1;
			}
		}
	}
}